namespace: rabbitmq-persistent-volume

rabbitmq:
  defines: runnable
  metadata:
    private: true
  volumes:
    rabbitmq-data:
      size: <- $persistent-volume-disk-capacity
      kind: <- $persistent-volume-disk-type
      path: <- $volume-data
  services:
    rabbitmq-erl-epmd-port:
      container: rabbitmq
      port: 4369
      protocol: tcp
      host-port: 4369
    rabbitmq-stream-1:
      container: rabbitmq
      port: 5551
      protocol: tcp
      host-port: 5551
    rabbitmq-stream-2:
      container: rabbitmq
      port: 5552
      protocol: tcp
      host-port: 5552
    rabbitmq-amqp-1:
      container: rabbitmq
      port: 5672
      protocol: tcp
      host-port: 5672
    rabbitmq-amqp-2:
      container: rabbitmq
      port: 5671
      protocol: tcp
      host-port: 5671
    rabbitmq-ui-1:
      container: rabbitmq
      port: 15671
      protocol: tcp
      host-port: 15671
    rabbitmq-ui-2:
      container: rabbitmq
      port: 15672
      protocol: tcp
      host-port: 15672
    rabbitmq-cli:
      container: rabbitmq
      port: 25672
      protocol: tcp
      host-port: 25672
  containers:
    rabbitmq:
      image: rabbitmq
      image-tag: <- `${rabbitmq-image}`
      paths:
        - <- `${volume-data}:/var/lib/rabbitmq/`
  files:
    advanced-config:
      container: rabbitmq
      mode: 0644
      path: /etc/rabbitmq/advanced.config
      contents: <<< files/advanced.config
    config:
      container: rabbitmq
      mode: 0644
      path: /etc/rabbitmq/rabbitmq.conf
      contents: <<< files/rabbitmq.conf
    env-config:
      container: rabbitmq
      mode: 0644
      path: /etc/rabbitmq/rabbitmq-env.conf
      contents: <<< files/rabbitmq-env.conf
  variables:
    volume-data:
      type: string
      value: <- `${monk-volume-path}/rabbitmq`
    persistent-volume-disk-capacity:
      type: string
      value: <- $persistent-volume-disk-size
    persistent-volume-disk-type:
      type: string
      value: <- $persistent-volume-disk-kind
    rabbitmq-image:
      value: <- $rabbitmq-image-tag
      type: string
    RABBITMQ_CONFIG_FILE:
      env: RABBITMQ_CONFIG_FILE
      type: string
      value: /etc/rabbitmq/rabbitmq.conf
    RABBITMQ_ADVANCED_CONFIG_FILE:
      env: RABBITMQ_ADVANCED_CONFIG_FILE
      type: string
      value: /etc/rabbitmq/advanced.config
    RABBITMQ_CONF_ENV_FILE:
      env: RABBITMQ_CONF_ENV_FILE
      type: string
      value: /etc/rabbitmq/rabbitmq-env.conf

nginx:
  defines: runnable
  inherits: nginx
  metadata:
    private: true
  depends:
    wait-for:
      runnables:
        - rabbitmq-persistent-volume/rabbitmq
      timeout: 30
  services:
    nginx:
      container: nginx-reverse-proxy
      port: <- `${listen-port}`
      protocol: tcp
      host-port: <- `${listen-port}`
  connections:
    rabbitmq:
      runnable: rabbitmq-persistent-volume/rabbitmq
      service: rabbitmq-ui-2
  files:
    server-def:
      contents: |
        server {
          listen 0.0.0.0:{{ v "listen-port" }};
          location / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://{{ v "proxy-target-host" }}:15672;
          }
        }
      mode: 511
      path: /opt/bitnami/nginx/conf/server_blocks/reverse_proxy.conf
      container: nginx-reverse-proxy
  containers:
    nginx-reverse-proxy:
      image-tag: <- `${nginx-image}`
      image: docker.io/bitnami/nginx
      ports:
        - <- `0.0.0.0:${listen-port}:${listen-port}/tcp`
  variables:
    proxy-target-host:
      value: <- connection-hostname("rabbitmq")
      type: string
    listen-port:
      value: <- $nginx-listen-port
      type: string
    server-name:
      value: <- $rabbitmq-server-name
      type: string
    proxy-target-port:
      value: <- $rabbitmq-node-port
      type: string
    nginx-image:
      value: <- $nginx-image-tag
      type: string
